name: Python CI/CD pipeline

on: [push, workflow_dispatch]

jobs:
  lint-and-test:
    name: Lint and test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      
      - name: Install requirements
        run: pip install flake8 pylint

      - name: Lint hello.py
        run: |
          flake8 hello.py
          pylint hello.py
      
      - name: Test the script
        run: python hello.py | grep -i hello || exit 1
  
  build-and-push:
    name: Build and push Container
    needs: lint-and-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
      # pulls the latest code
      - name: Checkout code
        uses: actions/checkout@v4
      # sets up docker so we can build images
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
      # login to github registry so we can push the build images
      - name: Log in to Github container registery
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      # This is so that we auto generate nice image names/tags. This saves you from hardcoding verion tags.
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short,prefix=,suffix=
            type=sha,format=long,prefix=,suffix=
            type=ref,event=branch,prefix=,suffix=

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64, linux/arm64
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}

  test-image:
    name: Pull and test container
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      packages: read
    steps:
      - name: Log in to Github container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
          
      - name: Pull the image from github container registry
        run: docker pull ghcr.io/${{github.repository}}:${{github.sha}}

      - name: run the image
        run: docker run --rm ghcr.io/${{github.repository}}:${{github.sha}} | grep -i hello || exit 1
